import socket
import os
import subprocess
import time
from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_OAEP
# import winreg as wrg

CCIP = "127.0.0.1"
CCPORT = 5555


class Cryptography:

    def __init__(self):
        self.keyPair = RSA.generate(2048)
        self.publicKeyPEM = self.keyPair.publickey().exportKey()
        self.manager = PKCS1_OAEP.new(self.keyPair)

    def encrypt(self,message):
        return self.manager.encrypt(message.encode("utf-8"))
    
    def decrypt(self,cyphertext):
        return self.manager.decrypt(cyphertext).decode()

    def getPublicKey(self):
        return self.publicKeyPEM


class Communication:
    def __init__(self):
        self.client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    
    def conn(self, CCIP, CCPORT):
        try:
            self.client.connect((CCIP, CCPORT))
            print("connected")
        
        except Exception as e:
            print(e)

    def send(self, message):
        try:
            self.client.send('invio qualcosa\n'.encode()) 
            self.client.send(message)
            print(f"sending...{message}")
        except Exception as e:
            print(e)

    def receive(self):
        try:
            while True:
                data = self.client.recv(1024).decode().strip()
                print(data)
        except Exception as e:
            print(e)
            self.client.close()


if __name__ == "__main__":
    communication = Communication()
    crypto = Cryptography()

    while True:
        print("inside while")

        communication.conn(CCIP, CCPORT)
        communication.send(crypto.getPublicKey())
        communication.receive()

