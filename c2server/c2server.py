from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_OAEP
import socket

class Cryptography:

    def __init__(self):
        self.keyPair = RSA.generate(2048)
        self.publicKeyPEM = self.keyPair.publickey().exportKey()
        self.manager = PKCS1_OAEP.new(self.keyPair)

    def encrypt(self,message):
        return self.manager.encrypt(message.encode("utf-8"))
    
    def decrypt(self,cyphertext):
        return self.manager.decrypt(cyphertext).decode()

    def getPublicKey(self):
        return self.publicKeyPEM
    
def main():
    
    crypto = Cryptography()

    HOST = "localhost"
    PORT = 5555

    server = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    server.bind((HOST,PORT))
    server.listen(5)

    clientSocket, clientAddr = server.accept()
    
    with clientSocket:
        print(f"[SERVER]Accepted connection from {clientAddr}")
        print("[SERVER] Sending server's public key...")
        clientSocket.send(crypto.getPublicKey())
        
    server.close()
    
if __name__ == "__main__":
    main()